apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-proxy
  namespace: default
  labels:
    app: queue-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-proxy
  template:
    metadata:
      labels:
        app: queue-proxy
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: queue-proxy
          image: localhost:5000/queue-proxy:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: REDIS_ADDR
              value: "redis:6379"
            - name: REDIS_QUEUE_KEY
              value: "metrics_queue"
            - name: DEFAULT_TENANT
              value: "demo-tenant"
            - name: DEFAULT_SERVICE
              value: "waiter"
            - name: DEFAULT_REVISION
              value: "waiter-00001"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "64Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: queue-proxy
  namespace: default
  labels:
    app: queue-proxy
spec:
  selector:
    app: queue-proxy
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
